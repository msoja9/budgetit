{"version":3,"sources":["Components/MonthlyButton.jsx","Components/AddIncomeButton.jsx","Components/AddExpenseButton.jsx","Components/Totals.jsx","Components/Savings.jsx","App.js","reportWebVitals.js","index.js","Blogo.png"],"names":["MonthlyButton","_ref","monthly","set","setIncome","incomeArray","expenseArray","savingsArray","setExpenses","setSavings","total","array","setObject","object","counter","length","parseFloat","console","log","React","createElement","className","onClick","newIncomeArray","newExpenseArray","newSavingsArray","div","document","getElementsByClassName","value","input","push","divE","inputE","valueE","divS","inputS","valueS","AddIncomeButton","incomeCounter","newIncomeLine","income","clearIncomeInput","a","target","clearItemInput","totalIncome","key","type","defaultValue","onFocus","e","id","onChange","b","isNaN","handleChange","Array","from","map","c","index","d","getElementById","remove","handleMinusClick","currentKey","undefined","addIncome","AddExpenseButton","_useState","useState","_useState2","_slicedToArray","expenseCounter","newExpenseLine","expenses","clearExpenseInput","totalExpense","addExpense","Totals","Income","Expenses","Savings","MoneyTotal","SavingsTotal","moneyColor","totalColor","bankAccount","Bank","style","color","marginLeft","savingsCounter","newSavingsLine","savings","clearSavingsInput","totalSavings","addSavings","App","setMonthly","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","setBankAccount","href","rel","src","Image","clearAccountInput","bank","text","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","module","exports","p"],"mappings":"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","file":"static/js/main.d3196072.chunk.js","sourcesContent":["import React from 'react';\n\nexport function MonthlyButton({ monthly, set, incomeArray, expenseArray, savingsArray, setIncome, setExpenses, setSavings}) {\n  \n  \n  function total(array, setObject) {\n    var object = 0;\n    for (let counter = 0; counter < array.length; counter++) {\n        object = object + parseFloat(array[counter], 10);\n    };\n    setObject(object);\n    console.log(object);\n  };\n  \n  function handleClick() {\n    if (monthly === \"Monthly Budget\") {\n      set(\"Yearly Budget\")\n      var newIncomeArray = [];\n      var newExpenseArray = [];\n      var newSavingsArray =[];\n\n      var div = document.getElementsByClassName(\"Income-amount\");\n      console.log(div);\n      if (div[0].value !== \"Enter Income\"){\n        for (let input = 0; input < div.length; input++){\n          var value = parseFloat(div[input].value, 10);\n          value = value * 12;\n          div[input].value = value;\n          newIncomeArray.push(value);\n        };\n        console.log(newIncomeArray);\n        console.log(newIncomeArray.length);\n          total(newIncomeArray, setIncome);\n      };\n\n      var divE = document.getElementsByClassName(\"Expense-amount\");\n      console.log(divE);\n      if (divE[0].value !== \"Enter Expense\"){\n        for (let inputE = 0; inputE < divE.length; inputE++){\n          var valueE = parseFloat(divE[inputE].value, 10);\n          valueE = valueE * 12;\n          divE[inputE].value = valueE;\n          newExpenseArray.push(valueE);\n        };\n        console.log(newExpenseArray);\n        total(newExpenseArray, setExpenses);\n      };\n\n      var divS = document.getElementsByClassName(\"Savings-amount\");\n      console.log(divS);\n      if (divS[0].value !== \"Enter Savings Amount\"){\n        for (let inputS = 0; inputS < divS.length; inputS++){\n          var valueS = parseFloat(divS[inputS].value, 10);\n          valueS = valueS * 12;\n          divS[inputS].value = valueS;\n          newSavingsArray.push(valueS);\n        };\n        console.log(newSavingsArray);\n        total(newSavingsArray, setSavings);\n      };\n\n    } else {\n      set(\"Monthly Budget\")\n      var newIncomeArray = [];\n      var newExpenseArray = [];\n      var newSavingsArray =[];\n\n      var div = document.getElementsByClassName(\"Income-amount\");\n      console.log(div);\n      if (div[0].value !== \"Enter Income\"){\n        for (let input = 0; input < div.length; input++){\n          var value = parseFloat(div[input].value, 10);\n          value = value / 12;\n          div[input].value = value;\n          newIncomeArray.push(value);\n        };\n        console.log(newIncomeArray);\n          total(newIncomeArray, setIncome);\n      };\n\n      var divE = document.getElementsByClassName(\"Expense-amount\");\n      console.log(divE);\n      if (divE[0].value !== \"Enter Expense\"){\n        for (let inputE = 0; inputE < divE.length; inputE++){\n          var valueE = parseFloat(divE[inputE].value, 10);\n          valueE = valueE / 12;\n          divE[inputE].value = valueE;\n          newExpenseArray.push(valueE);\n        };\n        console.log(newExpenseArray);\n        total(newExpenseArray, setExpenses);\n      };\n\n      var divS = document.getElementsByClassName(\"Savings-amount\");\n      console.log(divS);\n      if (divS[0].value !== \"Enter Savings Amount\"){\n        for (let inputS = 0; inputS < divS.length; inputS++){\n          var valueS = parseFloat(divS[inputS].value, 10);\n          valueS = valueS / 12;\n          divS[inputS].value = valueS;\n          newSavingsArray.push(valueS);\n        };\n        console.log(newSavingsArray);\n        total(newSavingsArray, setSavings);\n      };\n    };\n  }\n  return (\n    <button className='Timeframe' onClick={handleClick}> Monthly/Yearly</button>\n  )\n};","import React from 'react';\nimport { useState } from 'react';\n\n\nexport function AddIncomeButton({ setIncome, incomeArray, incomeCounter, newIncomeLine}) {\n\n    var income = 0;\n\n    function clearIncomeInput(a) {\n        if (a.target.value === 'Enter Income') {\n            a.target.value = \"\"\n        };\n    };\n\n    function clearItemInput(a) {\n        if (a.target.value === 'Enter Item Name') {\n            a.target.value = \"\"\n        };\n    };\n\n    const handleClick = () => {\n        newIncomeLine(incomeCounter + 1);\n        console.log(newIncomeLine)\n    };\n\n    function handleMinusClick(d) {\n        // newIncomeLine(incomeCounter - 1);\n        var key = parseFloat(d.target.id, 10) + 1;\n        console.log(key);\n        incomeArray[key] = 0;\n        totalIncome(incomeArray);\n        // console.log(incomeArray);\n        var minusLi = document.getElementById(d.target.id);\n        minusLi.remove();\n        // console.log(\"MINUS INCOME\", incomeArray);\n    };\n\n    function totalIncome() {\n        income = 0;\n        for (let counter = 0; counter < incomeArray.length; counter++) {\n            income = income + parseFloat(incomeArray[counter], 10);\n        };\n        setIncome(income);\n    };\n\n    function handleChange(b) {\n        if (b.target.value === \"\" || isNaN(b.target.value)) {\n            incomeArray[0] = 0;\n        } else {\n            incomeArray[0] = b.target.value;\n        };\n        totalIncome(incomeArray);\n        setIncome(income);\n        console.log(\"FIRST INCOME\", incomeArray);\n    };\n\n    function addIncome(c) {\n        let currentKey = parseFloat(c.target.id, 10) + 1;\n        console.log(\"VAL\", c.target.value, \"ARRAY ELE\", incomeArray[currentKey]);\n        if (incomeArray[currentKey] === undefined && c.target.value !== \"\" && !isNaN(c.target.value)) {\n            console.log(\"UNDEFINED\", currentKey);\n            incomeArray.push(c.target.value);\n            // console.log(\"ARRAY2\", incomeArray);\n            totalIncome(incomeArray);\n        } else if (c.target.value === \"\" || isNaN(c.target.value)) {\n            incomeArray[currentKey] = 0;\n            totalIncome(incomeArray);\n        } else {\n            // console.log(\"ELSE\");\n            incomeArray[currentKey] = c.target.value;\n            totalIncome(incomeArray);\n        };\n        console.log(\"OTHER INCOME\", incomeArray);\n    };\n\n\n    return (\n        <div className='Income-body'>\n            <span className='Income-box'>Income</span>\n            <li className='ulList' key='first'>\n                <button className='Income-button' onClick={handleClick}>+</button>\n                <input type=\"text\" className='Income-item' defaultValue=\"Enter Item Name\" onFocus={(e) => clearItemInput(e)} />\n                <span> $</span>\n                <input type=\"text\" id = \"-1-1\" className='Income-amount' defaultValue=\"Enter Income\" onFocus={(e) => clearIncomeInput(e)} onChange={(b) => handleChange(b)} />\n            </li>\n            {Array.from(Array(incomeCounter)).map((c, index) => {\n                return (\n                    <form className='Income-formMinus' id={index}>\n                        <li className='ulListkey' key={index} >\n                            <button type=\"button\" id={index}  className='Income-buttonMinus' onClick={(d) => handleMinusClick(d)}> - </button>\n                            <input type=\"text\" id={index} className='Income-item' defaultValue=\"Enter Item Name\" onFocus={(e) => clearItemInput(e)} />\n                            <span> $</span>\n                            <input type=\"text\" id={index} className='Income-amount' defaultValue=\"Enter Income\" onFocus={(e) => clearIncomeInput(e)} onChange={(c) => addIncome(c)} />\n                        </li>\n                    </form>\n                )\n            })\n            }\n        </div>\n\n    );\n\n};\n\n","import React from 'react';\nimport { useState } from 'react';\n\nfunction AddExpenseButton({setExpenses, expenseArray }) {\n\n    const [expenseCounter, newExpenseLine] = useState(0);\n    var expenses = 0;\n\n    function clearExpenseInput(a) {\n        if (a.target.value === 'Enter Expense') {\n            a.target.value = \"\"\n        };\n    };\n\n    function clearItemInput(a) {\n        if (a.target.value === 'Enter Expense Name') {\n            a.target.value = \"\"\n        };\n    };\n\n    const handleClick = () => {\n        newExpenseLine(expenseCounter + 1);\n        console.log(newExpenseLine)\n    };\n\n    function handleMinusClick(d){\n        // newExpenseLine(expenseCounter - 1);\n        var key = parseFloat(d.target.id, 10) + 1;\n        console.log(key);\n        expenseArray[key] = 0;\n        totalExpense(expenseArray);\n        // console.log(incomeArray);\n        var minusLi = document.getElementById(d.target.id);\n        minusLi.remove();\n    };\n\n    function totalExpense() {\n        expenses = 0;\n        for (let counter = 0; counter < expenseArray.length; counter++) {\n            expenses = expenses + parseFloat(expenseArray[counter], 10);\n        };\n        setExpenses(expenses);\n    };\n\n    function handleChange(b) {\n        if (b.target.value === \"\" || isNaN(b.target.value)) {\n            expenseArray[0] = 0;\n        } else {\n            expenseArray[0] = b.target.value;\n        };\n        totalExpense(expenseArray);\n        setExpenses(expenses);\n        console.log(\"FIRST EXPENSE\", expenseArray);\n    };\n\n\n    function addExpense(c) {\n        let currentKey = parseFloat(c.target.id, 10) + 1;\n        console.log(\"VAL\", c.target.value, \"ARRAY ELE\", expenseArray[currentKey]);\n        if (expenseArray[currentKey] === undefined && c.target.value !== \"\" && !isNaN(c.target.value)) {\n            console.log(\"UNDEFINED\", currentKey);\n            expenseArray.push(c.target.value);\n            // console.log(\"ARRAY2\", incomeArray);\n            totalExpense(expenseArray);\n        } else if (c.target.value === \"\" || isNaN(c.target.value)) {\n            expenseArray[currentKey] = 0;\n            totalExpense(expenseArray);\n        } else {\n            // console.log(\"ELSE\");\n            expenseArray[currentKey] = c.target.value;\n            totalExpense(expenseArray);\n        };\n        console.log(\"OTHER EXPENSE\", expenseArray);\n    };\n\n\n    return (\n        <div className='Income-body'>\n            <span className='Expense-box'>Expenses</span>\n            <li className='ulList' key=\"first\">\n                <button className='Income-button' onClick={handleClick}>+</button>\n                <input type=\"text\" className='Expense-item' defaultValue=\"Enter Expense Name\" onFocus={(e) => clearItemInput(e)} />\n                <span> $</span>\n                <input type=\"text\" id = \"-1\" className='Expense-amount' defaultValue=\"Enter Expense\" onFocus={(e) => clearExpenseInput(e)} onChange={(b) => handleChange(b)}/>\n            </li>\n            {Array.from(Array(expenseCounter)).map((c, index) => {\n                    return (\n                        <form className='Income-formMinus' id={index}>\n                            <li className='ulListkey' key={index}>\n                                <button type=\"button\" id={index} className='Income-buttonMinus' onClick={handleMinusClick}> - </button>\n                                <input type=\"text\" id={index} className='Expense-item' defaultValue=\"Enter Expense Name\" onFocus={(e) => clearItemInput(e)} />\n                                <span> $</span>\n                                <input type=\"text\" id={index} className='Expense-amount' defaultValue=\"Enter Expense\" onFocus={(e) => clearExpenseInput(e)} onChange={(c) => addExpense(c)}/>\n                            </li>\n                        </form>\n                    )\n                } \n\n            )}\n\n        </div>\n\n    );\n\n};\n\nexport { AddExpenseButton };","import React from 'react';\n\nfunction Totals({ Income, Expenses, Savings, Bank }) {\n\n    // console.log(Income);\n    // console.log(Expenses);\n    // console.log(\"SAVINGS\", Savings);\n\n    var MoneyTotal = Income - Expenses;\n    MoneyTotal = MoneyTotal - Savings;\n\n    // console.log(MoneyTotal);\n    var SavingsTotal = Savings;\n    let moneyColor = 'black';\n    let totalColor = 'black';\n\n    var bankAccount = Bank + Income;\n    bankAccount = bankAccount - Savings;\n    bankAccount = bankAccount - Expenses;\n\n    if (MoneyTotal > 0) {\n        moneyColor = \"green\";\n    } else if (MoneyTotal === 0) {\n        moneyColor = \"black\";\n    } else {\n        moneyColor= \"red\";\n    };\n\n    if (bankAccount > 0) {\n        totalColor = \"green\";\n    } else if (bankAccount === 0) {\n        totalColor = \"black\";\n    } else {\n        totalColor= \"red\";\n    };\n\n    return (\n        <div className='Income-body'>\n            <span className='Totals-box'>Totals</span>\n            <div className='Money-total'>\n                Delta: <span style={{color: moneyColor, marginLeft: 4}} id='Delta'>${MoneyTotal}</span>\n                <div className='Savings-total'>\n                    Savings Total: ${SavingsTotal}\n                </div>\n                <div className='Savings-total'>\n                    Bank Account Total: <span style={{color: totalColor, marginLeft: 4}} id='Delta'>${bankAccount}</span>\n                </div>\n            </div>\n\n        </div>\n\n    );\n\n};\n\nexport { Totals };","import React from 'react';\nimport { useState } from 'react';\n\nfunction Savings({setSavings, savingsArray}) {\n\n    const [savingsCounter, newSavingsLine] = useState(0);\n    var savings = 0;\n\n    function clearSavingsInput(e) {\n        if (e.target.value === 'Enter Savings Amount') {\n            e.target.value = \"\"\n        };\n    };\n\n    function clearItemInput(e) {\n        if (e.target.value === 'Enter Savings Account') {\n            e.target.value = \"\"\n        };\n    };\n\n    const handleClick = () => {\n        newSavingsLine(savingsCounter + 1);\n        console.log(newSavingsLine)\n    };\n\n    function handleMinusClick(d){\n        // newExpenseLine(expenseCounter - 1);\n        var key = parseFloat(d.target.id, 10) + 1;\n        console.log(key);\n        savingsArray[key] = 0;\n        totalSavings(savingsArray);\n        // console.log(incomeArray);\n        var minusLi = document.getElementById(d.target.id);\n        minusLi.remove();\n    };\n\n    function totalSavings() {\n        savings = 0;\n        for (let counter = 0; counter < savingsArray.length; counter++) {\n            savings = savings + parseFloat(savingsArray[counter], 10);\n        };\n        setSavings(savings);\n    };\n\n    function handleChange(b) {\n        if (b.target.value === \"\" || isNaN(b.target.value)) {\n            savingsArray[0] = 0;\n        } else {\n            savingsArray[0] = b.target.value;\n        };\n        totalSavings(savingsArray);\n        setSavings(savings);\n        console.log(\"FIRST SAVING\", savingsArray);\n    };\n\n    function addSavings(c) {\n        let currentKey = parseFloat(c.target.id, 10) + 1;\n        console.log(\"VAL\", c.target.value, \"ARRAY ELE\", savingsArray[currentKey]);\n        if (savingsArray[currentKey] === undefined && c.target.value !== \"\" && !isNaN(c.target.value)) {\n            console.log(\"UNDEFINED\", currentKey);\n            savingsArray.push(c.target.value);\n            // console.log(\"ARRAY2\", incomeArray);\n            totalSavings(savingsArray);\n        } else if (c.target.value === \"\" || isNaN(c.target.value)) {\n            savingsArray[currentKey] = 0;\n            totalSavings(savingsArray);\n        } else {\n            // console.log(\"ELSE\");\n            savingsArray[currentKey] = c.target.value;\n            totalSavings(savingsArray);\n        };\n        console.log(\"OTHER EXPENSE\", savingsArray);\n    };\n\n\n    return (\n        <div className='Income-body'>\n            <span className='Savings-box'>Savings</span>\n            <li className='ulList' key=\"first\">\n                <button className='Income-button' onClick={handleClick}>+</button>\n                <input type=\"text\" className='Savings-item' defaultValue=\"Enter Savings Account\" onFocus={(e) => clearItemInput(e)} />\n                <span> $</span>\n                <input type=\"text\" id = \"-1\" className='Savings-amount' defaultValue=\"Enter Savings Amount\" onFocus={(e) => clearSavingsInput(e)} onChange={(b) => handleChange(b)}/>\n            </li>\n            {Array.from(Array(savingsCounter)).map((c, index) => {\n                    return (\n                        <form className='Income-formMinus' id={index}>\n                            <li className='ulListkey' key={index}>\n                                <button type=\"button\" id={index} className='Income-buttonMinus' onClick={handleMinusClick}> - </button>\n                                <input type=\"text\" id={index} className='Savings-item' defaultValue=\"Enter Savings Account\" onFocus={(e) => clearItemInput(e)} />\n                                <span> $</span>\n                                <input type=\"text\" id={index} className='Savings-amount' defaultValue=\"Enter Savings Amount\" onFocus={(e) => clearSavingsInput(e)} onChange={(c) => addSavings(c)}/>\n                            </li>\n                        </form>\n                    )\n                } \n            )}\n\n\n        </div>\n\n    );\n\n};\n\nexport { Savings };","import './App.css';\nimport { useState } from 'react';\nimport { MonthlyButton } from './Components/MonthlyButton';\nimport { AddIncomeButton } from './Components/AddIncomeButton';\nimport { AddExpenseButton } from './Components/AddExpenseButton';\nimport { Totals } from './Components/Totals';\nimport { Savings } from './Components/Savings';\nimport Image from './Blogo.png'\nimport React from 'react';\n\n\n\nfunction clearAccountInput(e) {\n  if (e.target.value === 'Amount') {\n      e.target.value = \"\"\n  };\n};\n\nfunction App() {\n  const [monthly, setMonthly] = useState(\"Monthly Budget\");\n  var [income, setIncome] = useState(0);\n  var [expenses, setExpenses] = useState(0);\n  var [savings, setSavings] = useState(0);\n  var [incomeArray, setIncomeArray] = useState([0]);\n  var [expenseArray, setExpenseArray] = useState([0]);\n  var [savingsArray, setSavingsArray] = useState([0]);\n  const [incomeCounter, newIncomeLine] = useState(0);\n  var [bankAccount, setBankAccount] = useState(0);\n\n\n\n\n  function handleChange(b) {\n    let bank = 0;\n    if (b.target.value !== \"\" || !isNaN(b.target.value)) {\n      bank = b.target.value;\n      bank = parseFloat(bank, 10);\n      setBankAccount(bank);\n    };\n    console.log(bankAccount);\n};\n  \n\n  return (\n    <div className=\"App\">\n      <link href='https://fonts.googleapis.com/css?family=League Gothic' rel='stylesheet'></link> \n      <div className=\"App-header\">\n        <div className='App-body'>\n          <img src={Image} className='logo'/>\n          <div className='Header-text'>udget<span className='Header-text-dash'>-</span><span className='Header-text-half'>It</span></div>\n        </div>\n        <div className='App-calc'>\n          \n          <div className='Month-year'>\n            {monthly}\n          </div>\n          <div className='headRow'>\n          <div className='Current-account'>\n            Current bank account total: $\n            <input type=\"text\" className='Account-amount' defaultValue=\"Amount\" onFocus={(e) => clearAccountInput(e)} onChange={(b) => handleChange(b)} />\n          </div>\n          <MonthlyButton monthly={monthly} set={setMonthly} incomeArray={incomeArray} savingsArray={savingsArray} expenseArray={expenseArray} setIncome= {setIncome} setExpenses={setExpenses} setSavings={setSavings}></MonthlyButton>\n          </div>\n          <div>\n            <AddIncomeButton text=\"\" setIncome={setIncome} incomeArray={incomeArray} incomeCounter={incomeCounter} newIncomeLine={newIncomeLine}/>\n          </div>\n          <div >\n            <AddExpenseButton text=\"\" setExpenses={setExpenses} expenseArray={expenseArray}/>\n          </div>\n          <div>\n            <Savings text=\"\" setSavings={setSavings} savingsArray={savingsArray}/>\n          </div>\n          <div>\n            <Totals text=\"\" Income={income} Expenses={expenses} Savings={savings} Bank={bankAccount}/>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/Blogo.7cbe63f5.png\";"],"sourceRoot":""}